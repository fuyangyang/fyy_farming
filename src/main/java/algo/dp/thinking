1. 一个带约束的优化问题是不是dp问题，可以尝试以下分析
（1）子问题是什么？
    （a）01背包问题：少一个物品是子问题；
    （b）硬币找零问题：少一种货币选择是子问题，比如1，2，5，10是问题，那么1，2，5是子问题；
    （c）矩阵链乘法：子问题是从中间分开的两个矩阵的最优乘法
    （d）最长公共子序列：子问题是如果最后元素相等，则求两个序列去掉最后一个元素的公共子序列，如果不相等，则包括两个子问题，分别少最后一个元素
    （e）最长递增子序列：子问题是去掉最后一个元素后求最长递增子序列
    子问题的关键：看n-1是子问题还是n-k是子问题，然后看子问题的解与原问题的解是什么关系。
（2）证明最优子结构
    （a）证明：如果解x*是问题的最优解，那么（x-1）*是子问题的最优解
    （b）反证：假设还有(y-1)*是子问题的最优解，那么(y-1)*配合上x1*是比x*还优的解，与x*是最优解矛盾，故（x-1）*是子问题的最优解
（3）如果最优子结构不能证明，则说明不适合dp来解
（4）证明重叠子问题：可以画一个树看下子问题是否重叠。
2. 核心
找出dp公式或者状态转移方程